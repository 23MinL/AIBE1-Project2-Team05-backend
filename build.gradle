plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.team05'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    all {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven {
        url = uri("https://maven.pkg.github.com/supabase-community/storage-java")
        credentials {
            username = System.getenv("SUPABASE_GPR_USER") ?: "x-access-token"
            password = System.getenv("SUPABASE_GPR_TOKEN") ?: ""
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.mysql:mysql-connector-j'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // build.gradle
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    // Supabase 라이브러리
    implementation "io.supabase:storage-java:1.1.0"

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    implementation 'com.google.genai:google-genai:0.2.0'
    implementation 'org.springframework.boot:spring-boot-starter-quartz:3.4.5'
}

    /* Kotlin-SDK 흔적 제거 후 -> 프로젝트 완성 시 제거 예정 */
    afterEvaluate {
        configurations.implementation.dependencies.removeIf {
            it.group == 'io.github.jan-tennert.supabase'
        }
    }

// Querydsl 빌드 옵션 설정
    def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
    tasks.withType(JavaCompile).configureEach {
        options.getGeneratedSourceOutputDirectory().set(file(generated))
    }

// java source set 에 querydsl QClass 위치 추가
    sourceSets {
        main.java.srcDirs += [generated]
    }

// gradle clean 시에 QClass 디렉토리 삭제
    clean {
        delete file(generated)
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
